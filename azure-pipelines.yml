# Build ASP.NET Core project using Azure Pipelines
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core?view=vsts

pool: Default

variables:
  buildConfiguration: 'Release'
  fortifyBuild: 'test'
  scan: 'sourceanalyzer -b'
  output: 'dotnet_output.fpr'

steps:
- script: |
    echo This is pipeline $(System.DefinitionId), workingDirectory set to $(Build.Repository.LocalPath)
    SET "MSBuildSDKsPath=C:\Program Files\dotnet\sdk\2.1.504\Sdks"
    echo %MSBuildSDKsPath% set in CMD session
    $(scan) $(fortifyBuild) -clean
    echo $(fortifyBuild) build cleaned by sourceanalyzer
    "C:\Program Files\dotnet\dotnet.exe" restore
    echo dotnet restore run?
    $(scan) $(fortifyBuild) "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\MSBuild\15.0\Bin\msbuild.exe" dotnetcore-sample.sln -t:rebuild
    echo MSBuild translation complete, scan in progress
    $(scan) $(fortifyBuild) -scan -f "C:\Temp\$(output)"
    echo scan complete, fpr in C:\Temp\output.fpr
  workingDirectory: $(Build.Repository.LocalPath)
  displayName: MSBuild Fortify Sourceanalyzer Integration
#- script: |
#    dotnet build --configuration $(buildConfiguration)
#    dotnet test dotnetcore-tests --configuration $(buildConfiguration) --logger trx
#    dotnet publish --configuration $(buildConfiguration) --output $BUILD_ARTIFACTSTAGINGDIRECTORY

#- task: PublishTestResults@2
#  condition: succeededOrFailed()
#  inputs:
#    testRunner: VSTest
#    testResultsFiles: '**/*.trx'

#- task: PublishBuildArtifacts@1
